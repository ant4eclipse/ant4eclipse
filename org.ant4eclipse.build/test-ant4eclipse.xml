<?xml version="1.0"?>
<project 
  name="org.ant4eclipse.build"
  basedir=".."
  default="tests.ant4eclipse"
>

  <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ -->
  <!-- PROPERTIES                                                                              -->
  <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ -->

  <property file="${file.buildsettings}"/>
  <property file="${basedir}/${ant.project.name}/default-build.properties"/>

  <property environment="env"/>

  <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ -->
  <!-- TARGET DEFINITIONS                                                                      -->
  <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ -->

  <target name="init">
    <property name="dest.reports"   value="${testing}/reports"/>
  </target>
  
  <target name="clean" depends="init">
    <delete includeemptydirs="true">
      <fileset dir="${testing}" includes="**/*"/>
    </delete>
  </target>
  
  <macrodef name="pickup-a4e">
    <attribute name="dest"/>
    <sequential>
      
      <!-- unpack the a4e distribution we're using for the tests -->
      <mkdir dir="@{dest}/testcode"/>
      
      <unzip src="${destination}/org.ant4eclipse.zip" dest="@{dest}"/>
      
      <!-- now declare ant-contrib based upon the release we have bundled -->
      <path id="path.antcontrib">
        <fileset dir="@{dest}/libs" includes="ant-contrib*.jar"/>
      </path>
      <taskdef classpathref="path.antcontrib"  resource="net/sf/antcontrib/antlib.xml" />
      
      <!-- we also need the testcode for the execution -->
      <for param="zip">
        <fileset dir="${destination}" includes="**/*-test.jar"/>
        <sequential>
          <unzip src="@{zip}" dest="@{dest}/testcode"/>
        </sequential>
      </for>

      <!-- now declare the ant4eclipse tasks based upon our release -->
      <path id="path.ant4eclipse">
        <fileset dir="${basedir}/org.ant4eclipse.external/libs/junit" includes="junit-*.jar"/>
        <fileset dir="${basedir}/org.ant4eclipse.external/libs/ant-antunit" includes="*.jar"/>
        <path location="@{dest}/org.ant4eclipse.jar"/>
        <path path="@{dest}/testcode"/>
      </path>
      
      <taskdef classpathref="path.ant4eclipse" resource="org/ant4eclipse/antlib.xml" />

    </sequential>
  </macrodef>
  
  <target name="prepare" depends="clean">

    <pickup-a4e dest="${testing}/distribution"/>
    
    <!-- identify the current revision (or local build) -->
    <if>
      <equals arg1="${env.SVN_REVISION}" arg2="$${env.SVN_REVISION}"/>
      <then>
        <var name="revision" value="local-revision"/> 
      </then>
      <else>
        <var name="revision" value="${env.SVN_REVISION}"/> 
      </else>
    </if>
    
    <mkdir dir="${dest.reports}"/>
    
  </target>

  <target name="test.project" depends="prepare">
    <executeJdtProject 
      workspaceDirectory="${basedir}"
      projectname="${executeProjectSet.project.name}"
    >
      <forEachSourceDirectory>
        <property name="reports" value="${dest.reports}/${executeProjectSet.project.name}" />
        <mkdir dir="${reports}" />
        <junit dir="${basedir}/${executeProjectSet.project.name}" fork="yes">
          <!-- <classpath refid="executeJdtProject.classpath.absolute.runtime.path" /> -->
          <classpath refid="path.ant4eclipse"/>
          <formatter type="xml" />
          <batchtest todir="${reports}">
            <fileset dir="${executeJdtProject.source.directory}">
              <include name="**/*Test.java" />
              <exclude name="**/Abstract*.java" />
            </fileset>
          </batchtest>
          <env key="ECLIPSE_JAVA_350_WIN32_HOME" value="${test.pde.eclipse-java-350-win32.home}"/>
          <env key="ECLIPSE_JAVA_350_LINUX_GTK_HOME" value="${test.pde.eclipse-java-350-linux-gtk.home}"/>
        </junit>
      </forEachSourceDirectory>
    </executeJdtProject>
    
  </target>
  
  <target name="test.library" depends="prepare">
    
    <echo>Testing A4E library ...</echo>
    
    <!-- Step 1: iterate over the project set and build each project -->
    <executeProjectSet 
      workspaceDirectory="${basedir}"
      teamprojectset="${teamprojectsetlib}"
      projectReferenceTypes="jdt"
    >

      <!-- build all test projects contained in the project set 
           and execute their test classes -->
      <forEachProject filter="(executeProjectSet.project.name=*.test)">
        <antcall target="test.project" inheritrefs="true" />
      </forEachProject>
      
    </executeProjectSet>
  
  </target>
  
  <target name="test.ant" depends="prepare">
    
    <echo>Testing A4E Ant tasks ...</echo>
    
    <!-- Step 1: iterate over the project set and build each project -->
    <executeProjectSet 
      workspaceDirectory="${basedir}"
      teamprojectset="${teamprojectset}"
      projectReferenceTypes="jdt"
    >

      <!-- build all test projects contained in the project set 
           and execute their test classes -->
      <forEachProject filter="(executeProjectSet.project.name=*.test)">
        <antcall target="test.project" inheritrefs="true" />
      </forEachProject>
      
    </executeProjectSet>

  </target>
  
  <target name="tests.ant4eclipse" depends="test.library,test.ant">
    <echo>Done</echo>
  </target>
  
</project>