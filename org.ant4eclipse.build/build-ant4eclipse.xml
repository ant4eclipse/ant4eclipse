<?xml version="1.0"?>
<project name="build.ant4eclipse"
         basedir=".."
         default="build.ant4eclipse"
         xmlns:ant4eclipse="antlib:org.ant4eclipse">

	<taskdef uri="antlib:org.ant4eclipse"
	         resource="org/ant4eclipse/antlib.xml" />

	<!-- load the build properties -->
	<property file="${basedir}/org.ant4eclipse.build/build.properties" />
	<property file="${basedir}/org.ant4eclipse.build/default-build.properties" />

	<!-- define your jdk location here -->
	<ant4eclipse:jreContainer>
		<jre id="jdk16" location="${jdk16.location}" />
	</ant4eclipse:jreContainer>

	<!-- =================================
          target: build.ant4eclipse
         ================================= -->
	<target name="build.ant4eclipse" depends="prepare">

		<!-- Step 1: iterate over the project set and build each project -->
		<ant4eclipse:executeProjectSet workspace="${basedir}"
		                               teamprojectset="${teamprojectset}"
		                               projectReferenceTypes="jdt">

			<!-- build each project contained in the project set -->
			<ant4eclipse:forEachProject>
				<antcall target="buildProject" inheritrefs="true" />
			</ant4eclipse:forEachProject>

		</ant4eclipse:executeProjectSet>

		<!-- Step 2: mergeModules -->
		<antcall target="mergeModules" inheritrefs="true" />

		<!-- Step 3: buildDistribution -->
		<antcall target="buildDistribution" inheritrefs="true" />

	</target>

	<!-- - - - - - - - - - - - - - - - - -
          target: prepare
         - - - - - - - - - - - - - - - - - -->
	<target name="prepare">
		<delete dir="${destination}" quiet="true" />
		<mkdir dir="${destination}" />
	</target>

	<!-- - - - - - - - - - - - - - - - - -
          target: buildProject
         - - - - - - - - - - - - - - - - - -->
	<target name="buildProject">
		<echo>Building project "${executeProjectSet.project.name}"</echo>

		<ant4eclipse:executeJdtProject workspace="${basedir}"
		                               projectname="${executeProjectSet.project.name}">

			<!-- Step 1: clean output directories -->
			<ant4eclipse:forEachOutputDirectory>
				<antcall target="cleanOutputDirectories" inheritrefs="true" />
			</ant4eclipse:forEachOutputDirectory>

			<!-- Step 2: call generate.source -->
			<ant4eclipse:forProject>
				<available file="${executeJdtProject.project.directory}/build.xml" property="build.file.exists"/>
				<antcall target="generate.source" inheritrefs="true" />
			</ant4eclipse:forProject>
			
			<!-- Step 3: compile the project -->
			<ant4eclipse:forProject>
				<antcall target="compileProject" inheritrefs="true" />
			</ant4eclipse:forProject>

			<!-- Step 4: copy resources -->
			<ant4eclipse:forEachSourceDirectory>
				<antcall target="copyResources" inheritrefs="true" />
			</ant4eclipse:forEachSourceDirectory>

			<!-- Step 5: copy outfolders to the merge directory -->
			<ant4eclipse:forEachOutputDirectory>
				<antcall target="copyToMergeDirectory" inheritrefs="true" />
			</ant4eclipse:forEachOutputDirectory>

		</ant4eclipse:executeJdtProject>

		<echo>Project "${executeProjectSet.project.name}" built</echo>
	</target>


	<!-- - - - - - - - - - - - - - - - - -
          target: cleanOutputDirectories
         - - - - - - - - - - - - - - - - - -->
	<target name="cleanOutputDirectories">
		<echo>Scrubbing directory "${executeJdtProject.output.directory}"</echo>

		<delete dir="${executeJdtProject.output.directory}" quiet="true" />
		<mkdir dir="${executeJdtProject.output.directory}" />
	</target>
	
	<!-- - - - - - - - - - - - - - - - - -
          target: generate.source
         - - - - - - - - - - - - - - - - - -->
	<target name="generate.source" if="build.file.exists">
		<echo>Calling target 'generate.source' in file '${executeJdtProject.project.directory}/build.xml'</echo>
		<ant dir="${executeJdtProject.project.directory}" antfile="build.xml" target="generate.source" inheritRefs="true"/>
	</target>

	<!-- - - - - - - - - - - - - - - - - -
          target: compileProject
         - - - - - - - - - - - - - - - - - -->
	<target name="compileProject" if="executeJdtProject.source.directories">
		<echo>Compiling jdt project '${executeJdtProject.project.name}'</echo>
		<echo>  - source directories -> ${executeJdtProject.source.directories}</echo>
		<echo>  - output directory   -> ${executeJdtProject.default.output.directory}</echo>
		<echo>  - bootclasspath      -> ${executeJdtProject.boot.classpath}</echo>
		<echo>  - classpath          -> ${executeJdtProject.classpath.absolute.compiletime}</echo>

		<javac destdir="${executeJdtProject.default.output.directory}"
		       debug="on"
		       compiler="org.ant4eclipse.jdt.ecj.JDTCompilerAdapter">

			<src refid="executeJdtProject.source.directories.path" />
			<bootclasspath refid="executeJdtProject.boot.classpath.path" />
			<classpath refid="executeJdtProject.classpath.absolute.compiletime.path" />

			<compilerarg value="compiler.args.refid=executeJdtProject.compiler.args"
			             compiler="org.ant4eclipse.jdt.ecj.JDTCompilerAdapter" />

			<compilerarg value="compiler.options.file=${executeJdtProject.project.directory}/.settings/org.eclipse.jdt.core.prefs"
			             compiler="org.ant4eclipse.jdt.ecj.JDTCompilerAdapter" />

			<compilerarg value="compiler.options.file.overrideJavacTask=true"
			             compiler="org.ant4eclipse.jdt.ecj.JDTCompilerAdapter" />
		</javac>
	</target>

	<!-- - - - - - - - - - - - - - - - - -
          target: copyResources
         - - - - - - - - - - - - - - - - - -->
	<target name="copyResources">
		<echo>Copying resources from directory '${executeJdtProject.source.directory}'</echo>

		<copy todir="${executeJdtProject.output.directory}">
			<fileset dir="${executeJdtProject.source.directory}">
				<exclude name="**/*.java" />
			</fileset>
		</copy>
	</target>

	<!-- - - - - - - - - - - - - - - - - -
          target: copyToMergeDirectory
         - - - - - - - - - - - - - - - - - -->
	<target name="copyToMergeDirectory">
		<echo>Copying '${executeJdtProject.output.directory}'</echo>

		<copy toDir="${destination}/merged/classes">
			<fileset dir="${executeJdtProject.output.directory}">
				<include name="**/*.class" />
			</fileset>
		</copy>

		<copy toDir="${destination}/merged/cfg/${executeJdtProject.project.name}">
			<fileset dir="${executeJdtProject.output.directory}">
				<include name="**/antlib.xml" />
				<include name="**/ant4eclipse-configuration.properties" />
			</fileset>
		</copy>

		<copy toDir="${destination}/merged/classes">
			<fileset dir="${executeJdtProject.output.directory}">
				<include name="**/*.profile" />
				<include name="**/*.list" />
				<include name="**/*.xml" />
				<include name="**/*.properties" />
				<exclude name="**/antlib.xml" />
				<exclude name="**/ant4eclipse-configuration.properties" />
			</fileset>
		</copy>
	</target>

	<!-- - - - - - - - - - - - - - - - - -
          target: mergeModules
         - - - - - - - - - - - - - - - - - -->
	<target name="mergeModules">

		<!-- merge all ant4eclipse.properties -->
		<ant4eclipse:mergeProperties destinationFile="${destination}/merged/classes/org/ant4eclipse/ant4eclipse-configuration.properties">
			<fileset dir="${destination}/merged/cfg">
				<include name="**/ant4eclipse-configuration.properties" />
				<exclude name="ant4eclipse-configuration.properties" />
			</fileset>
		</ant4eclipse:mergeProperties>

		<!-- merge all antlib.xml -->
		<ant4eclipse:mergeAntlibXml destinationFile="${destination}/merged/classes/org/ant4eclipse/antlib.xml">
			<fileset dir="${destination}/merged/cfg">
				<include name="**/antlib.xml" />
				<exclude name="antlib.xml" />
			</fileset>
		</ant4eclipse:mergeAntlibXml>

		<!-- build the jar file -->
		<jar destfile="${destination}/org.ant4eclipse_${revision}.jar"
		     basedir="${destination}/merged/classes" />

		<!-- delete the 'merged' directory -->
		<delete dir="${destination}/merged" quiet="true" />
	</target>

	<!-- - - - - - - - - - - - - - - - - -
          target: buildDistribution
         - - - - - - - - - - - - - - - - - -->
	<target name="buildDistribution">

		<!-- copy macros -->
		<ant4eclipse:executeProjectSet workspace="${basedir}"
		                               teamprojectset="${teamprojectset}"
		                               projectReferenceTypes="jdt">
			<ant4eclipse:forEachProject>
				<copy todir="${destination}/macros" flatten="true">
					<fileset dir="${basedir}/${executeProjectSet.project.name}">
						<include name="macros/*" />
					</fileset>
				</copy>
			</ant4eclipse:forEachProject>

		</ant4eclipse:executeProjectSet>

		<!-- copy libaries -->
		<mkdir dir="${destination}/libs" />
		<copy toDir="${destination}/libs" flatten="true">
			<fileset dir="${basedir}/org.ant4eclipse.external/libs">
				<include name="ant-contrib/*.jar" />
				<include name="ant-contrib/ANT-CONTRIB-LICENSE.txt" />
				<include name="ejc/*.jar" />
				<include name="ejc/ECJ-LICENSE-epl-v10.html" />
				<include name="equinox/*.jar" />
				<include name="equinox/EQUINOX-LICENSE-epl-v10.html" />
				<exclude name="equinox/*source*.jar" />
			</fileset>
		</copy>

		<!-- zip the result -->
		<zip destfile="${destination}/org.ant4eclipse_${revision}.zip">
			<fileset dir="${destination}"
			         excludes="${destination}/org.ant4eclipse_${revision}.zip" />
		</zip>
	</target>

</project>