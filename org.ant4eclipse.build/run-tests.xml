<?xml version="1.0"?>
<project 
  name="org.ant4eclipse.build"
  basedir=".."
  default="tests.ant4eclipse"
>

  <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ -->
  <!-- PROPERTIES                                                                              -->
  <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ -->

  <property file="${file.buildsettings}"/>
  <property file="${basedir}/${ant.project.name}/default-build.properties"/>

  <property environment="env"/>

  <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ -->
  <!-- TARGET DEFINITIONS                                                                      -->
  <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ -->

  <target name="init">
    
    <property name="dest.reports"   value="${destination}/reports"/>
    <property name="dest.cfg"       value="${destination}/cfg"/>

    <property name="dir.dist"       value="${destination}/distribution"/>
    
    <path id="path.antcontrib">
      <fileset dir="${dir.dist}/libs" includes="ant-contrib*.jar"/>
    </path>

    <path id="path.ant4eclipse">
      <fileset dir="${dir.dist}" includes="org.ant4eclipse.jar"/>
      <fileset dir="${basedir}/org.ant4eclipse.external/libs/junit" includes="junit-*.jar"/>
      <fileset dir="${destination}/library" includes="*-test.jar"/>
      <fileset dir="${destination}/ant" includes="*-test.jar"/>
    </path>

    <taskdef classpathref="path.antcontrib"  resource="net/sf/antcontrib/antlib.xml" />

    <taskdef classpathref="path.ant4eclipse" resource="org/ant4eclipse/antlib.xml" />

    <!-- identify the current revision (or local build) -->
    <if>
      <equals arg1="${env.SVN_REVISION}" arg2="$${env.SVN_REVISION}"/>
      <then>
        <var name="revision" value="local-revision"/> 
      </then>
      <else>
        <var name="revision" value="${env.SVN_REVISION}"/> 
      </else>
    </if>
    
    <var name="dir.reports" value="${destination}/reports"/>
    <mkdir dir="${dir.reports}"/>
    
  </target>

  <target name="test.project" depends="init">
    <executeJdtProject 
      workspaceDirectory="${basedir}"
      projectname="${executeProjectSet.project.name}"
    >
      <forEachSourceDirectory>
        <property name="reports" value="${dir.reports}/${executeProjectSet.project.name}" />
        <mkdir dir="${reports}" />
        <junit dir="${basedir}/${executeProjectSet.project.name}" fork="yes">
          <!-- <classpath refid="executeJdtProject.classpath.absolute.runtime.path" /> -->
          <classpath refid="path.ant4eclipse"/>
          <formatter type="xml" />
          <batchtest todir="${reports}">
            <fileset dir="${executeJdtProject.source.directory}">
              <include name="**/*Test.java" />
            </fileset>
          </batchtest>
          <env key="ECLIPSE_JAVA_350_WIN32_HOME" value="${test.pde.eclipse-java-350-win32.home}"/>
          <env key="ECLIPSE_JAVA_350_LINUX_GTK_HOME" value="${test.pde.eclipse-java-350-linux-gtk.home}"/>
        </junit>
      </forEachSourceDirectory>
    </executeJdtProject>
    
  </target>
  
  <target name="test.library" depends="init">
    
    <echo>Testing A4E library ...</echo>
    
    <!-- Step 1: iterate over the project set and build each project -->
    <executeProjectSet 
      workspaceDirectory="${basedir}"
      teamprojectset="${teamprojectsetlib}"
      projectReferenceTypes="jdt"
    >

      <!-- build all test projects contained in the project set 
           and execute their test classes -->
      <forEachProject filter="(executeProjectSet.project.name=*.test)">
        <antcall target="test.project" inheritrefs="true" />
      </forEachProject>
      
    </executeProjectSet>
  
  </target>
  
  <target name="tests.ant4eclipse" depends="test.library">
    <echo>Done</echo>
  </target>
  
</project>