<?xml version="1.0"?>
<project name="a4e-jdt-macros" basedir="." xmlns:ant4eclipse="antlib:org.ant4eclipse">

	<!-- define ant4eclipse tasks -->
	<taskdef uri="antlib:org.ant4eclipse" resource="org/ant4eclipse/antlib.xml" />


	<!-- ===============================================================================================================
          macro: buildJdtProjects
          
          builds a set of JDT-based eclipse project
          
          Parameters:
          - workspace: the root directory of the workspace that contains the JDT projects
          - projectNames: a comma-separated list of all projects that should be built
         ============================================================================================================== 
    -->
	<macrodef name="buildJdtProjects" description="builds a set of JDT-based eclipse project">
		<attribute name="workspace" />
		<attribute name="projectNames" />
		<sequential>

			<echo>
			* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
			* * *  Buildings project @{projectNames}
			* * *  in workspace      @{workspace}
			* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
  		</echo>

			<ant4eclipse:executeProjectSet workspace="@{workspace}"
			                               projectnames="@{projectNames}"
			                               projectreferencetypes="jdt">

				<!-- build all projects -->
				<ant4eclipse:forEachProject>
					<buildJdtProject workspace="${workspaceDir}" projectName="${executeProjectSet.project.name}" />
				</ant4eclipse:forEachProject>
			</ant4eclipse:executeProjectSet>
		</sequential>
	</macrodef>

	<!-- ===============================================================================================================
          macro: buildJdtProject
          
          builds a single JDT-based eclipse project
          Parameters:
          - workspace: the root directory of the workspace that contains the JDT project
          - projectName: the name of the project that should be built (must exist in the workspace)
         ============================================================================================================== 
    -->
	<macrodef name="buildJdtProject" description="builds a single JDT-based eclipse project">
		<attribute name="workspace" />
		<attribute name="projectName" />
		<sequential>

			<echo>
			* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
			* * *  Building project @{projectName}
			* * *  in workspace     @{workspace}
			* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
  		</echo>

			<ant4eclipse:executeJdtProject workspace="@{workspace}" projectName="@{projectName}">

				<!-- Step 1: clean output directories -->
				<ant4eclipse:forEachOutputDirectory>
					<echo> * Cleaning output directory '${executeJdtProject.output.directory}'</echo>
					<delete dir="${executeJdtProject.output.directory}" quiet="true" />
					<mkdir dir="${executeJdtProject.output.directory}" />
				</ant4eclipse:forEachOutputDirectory>

				<!-- Step 2: Compile the project using the eclipse java compiler (ejc) -->
				<ant4eclipse:forProject>
					<echo> * Compiling the project @{projectName}</echo>
					<javac destdir="${executeJdtProject.default.output.directory}"
					       compiler="org.ant4eclipse.jdt.ecj.JDTCompilerAdapter">
						<!-- let ejc read compiler settings from the project's '.settings' directory -->
						<compilerarg value="compiler.options.file=${executeJdtProject.project.directory}/.settings/org.eclipse.jdt.core.prefs"
						             compiler="org.ant4eclipse.jdt.ecj.JDTCompilerAdapter" />
						<!-- set the source folders that are passed in from 'fromProject' -->
						<src refid="executeJdtProject.source.directories.path" />

						<!-- set the bootclasspath, i.e. the JRE we compile against -->
						<bootclasspath refid="executeJdtProject.boot.classpath.path" />

						<!-- set our compile-time classpath -->
						<classpath refid="executeJdtProject.classpath.absolute.compiletime.path" />
					</javac>
				</ant4eclipse:forProject>

				<!-- Step 3: Copy resources (non-java-files) from sourcedirectories to their output directories -->
				<ant4eclipse:forEachSourceDirectory>
					<echo>Copying resources from directory '${executeJdtProject.source.directory}' to '${executeJdtProject.output.directory}'</echo>
					<copy todir="${executeJdtProject.output.directory}">
						<fileset dir="${executeJdtProject.source.directory}">
							<exclude name="**/*.java" />
						</fileset>
					</copy>
				</ant4eclipse:forEachSourceDirectory>
			</ant4eclipse:executeJdtProject>
		</sequential>
	</macrodef>
</project>