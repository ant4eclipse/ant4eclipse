/**********************************************************************
 * Copyright (c) 2005-2007 ant4eclipse project team.
 *
 * All rights reserved. This program and the accompanying materials
 * are made available under the terms of the Eclipse Public License v1.0
 * which accompanies this distribution, and is available at
 * http://www.eclipse.org/legal/epl-v10.html
 *
 * Contributors:
 *     Nils Hartmann, Daniel Kasmeroglu, Gerd Wuetherich
 **********************************************************************/
package org.ant4eclipse.jdt.tools;

import java.io.File;
import java.util.Arrays;

import org.ant4eclipse.core.Assert;


/**
 * @author Gerd W&uuml;therich (gerd@gerd-wuetherich.de)
 */
public class ResolvedClasspathEntry {

  /** the file that make */
  private final File[]             _entries;

  private final AccessRestrictions _accessRestrictions;

  public ResolvedClasspathEntry(final File[] entries, final AccessRestrictions accessRestrictions) {
    Assert.notNull(entries);

    this._entries = entries;
    this._accessRestrictions = accessRestrictions;
  }

  public ResolvedClasspathEntry(final File entry, final AccessRestrictions accessRestrictions) {
    this(new File[] { entry }, accessRestrictions);
  }

  public ResolvedClasspathEntry(final File[] entries) {
    this(entries, null);
  }

  public ResolvedClasspathEntry(final File entry) {
    this(new File[] { entry }, null);
  }

  public File[] getEntries() {
    return this._entries;
  }

  public AccessRestrictions getAccessRestrictions() {
    return this._accessRestrictions;
  }

  public int hashCode() {
    final int prime = 31;
    int result = 1;
    result = prime * result + ((this._accessRestrictions == null) ? 0 : this._accessRestrictions.hashCode());
    result = prime * result + ResolvedClasspathEntry.hashCode(this._entries);
    return result;
  }

  public boolean equals(final Object obj) {
    if (this == obj) {
      return true;
    }
    if (obj == null) {
      return false;
    }
    if (getClass() != obj.getClass()) {
      return false;
    }
    final ResolvedClasspathEntry other = (ResolvedClasspathEntry) obj;
    if (this._accessRestrictions == null) {
      if (other._accessRestrictions != null) {
        return false;
      }
    } else if (!this._accessRestrictions.equals(other._accessRestrictions)) {
      return false;
    }
    if (!Arrays.equals(this._entries, other._entries)) {
      return false;
    }
    return true;
  }

  private static int hashCode(final Object[] array) {
    final int prime = 31;
    if (array == null) {
      return 0;
    }
    int result = 1;
    for (int index = 0; index < array.length; index++) {
      result = prime * result + (array[index] == null ? 0 : array[index].hashCode());
    }
    return result;
  }

  public static class AccessRestrictions {
    //

  }

  /**
   * @generated by CodeSugar http://sourceforge.net/projects/codesugar
   */

  public String toString() {
    final StringBuffer buffer = new StringBuffer();
    buffer.append("[ResolvedClasspathEntry:");
    buffer.append(" { ");
    for (int i0 = 0; (this._entries != null) && (i0 < this._entries.length); i0++) {
      buffer.append(" _entries[" + i0 + "]: ");
      buffer.append(this._entries[i0]);
    }
    buffer.append(" } ");
    buffer.append(" _accessRestrictions: ");
    buffer.append(this._accessRestrictions);
    buffer.append("]");
    return buffer.toString();
  }
}
